@use "../lib/colour" as c;
@use "../lib/rounding";
@use "../lib/anim";

.configtoggle-box {
    padding: 0.205rem 0.341rem;
}

.switch-bg {
    @include anim.element-decel;
    @include rounding.full;
    border: 0.136rem solid c.$onSurface;
    min-width: 2.864rem;
    min-height: 1.637rem;
}

.switch-bg-true {
    background-color: c.$primary;
    border: 0.136rem solid c.$primary;
}

.switch-fg {
    @include rounding.full;
    @include anim.menu-decel;
    background-color: c.$onSurface;
    color: c.$layer1;
    min-width: 0.819rem;
    min-height: 0.819rem;
    margin-left: 0.477rem;
}

.switch-fg-true {
    background-color: c.$onPrimary;
    color: c.$primary;
    min-width: 1.431rem;
    min-height: 1.431rem;
    margin-left: 1.431rem;
}

.switch-fg-toggling-false {
    @include anim.menu-decel;
    min-width: 1.636rem;
    min-height: 0.819rem;
}

.segment-container {
    @include rounding.full;
    border: 0.068rem solid c.$outline;
}

.segment-container > * {
    border-right: 0.068rem solid c.$outline;
    padding: 0.341rem 0.682rem;

    &:first-child {
        border-top-left-radius: 9999px;
        border-bottom-left-radius: 9999px;
    }

    &:last-child {
        border-right: 0rem solid transparent;
        border-top-right-radius: 9999px;
        border-bottom-right-radius: 9999px;
    }
}

.segment-btn {
    color: c.$onSurface;

    &:focus,
    &:hover {
        background-color: c.$layer0Hover;
    }
}

.segment-btn-enabled {
    background-color: c.$secondaryContainer;
    color: c.$onSecondaryContainer;

    &:hover,
    &:focus {
        background-color: c.$secondaryContainer;
        color: c.$onSecondaryContainer;
    }
}

.multipleselection-btn {
    @include rounding.small;
    padding: 0rem 0.341rem;
    border: 0.034rem solid c.$outline;
    color: c.$onSurface;

    &:focus,
    &:hover {
        background-color: c.$layer0Hover;
        color: c.$onSurface;
    }
}

.multipleselection-btn-enabled {
    background-color: c.$secondaryContainer;
    color: c.$onSecondaryContainer;

    &:hover,
    &:focus {
        background-color: c.$secondaryContainer;
        color: c.$onSecondaryContainer;
    }
}

.tab-btn {
    @include rounding.small;
    @include anim.element-decel;
    min-height: 2.5rem;
    color: c.$onLayer0;

    &:hover,
    &:focus {
        background-color: mix(c.$layer0, c.$layer0Hover, 50%);
    }

    &:active {
        background-color: c.$surfaceContainerHighest;
    }
}

.tab-btn-active > box > label {
    color: c.$primary;
}

.tab-indicator {
    transition: 180ms ease-in-out; // Doesn't look that good, but it syncs with the GtkStack
    min-height: 0.205rem;
    padding: 0rem 1.023rem;
    color: c.$primary;
}

.tab-icon {
    @include anim.element-decel;
    @include rounding.full;
    min-width: 2.25rem;
    min-height: 2.25rem;
    font-size: 1.406rem;
    color: c.$onSurface;
}

.tab-icon-active {
    background-color: c.$secondaryContainer;
    color: c.$onSecondaryContainer;
}

.tab-icon-expandable {
    @include rounding.full;
    transition: 0ms;
    min-width: 2.25rem;
    min-height: 2.25rem;
    font-size: 1.406rem;
    color: c.$onSurface;
    padding: 0rem;
}

.tab-icon-expandable-active {
    background-color: c.$secondaryContainer;
    color: c.$onSecondaryContainer;
    padding: 0rem 0.545rem;
    min-width: 9.545rem;
}
